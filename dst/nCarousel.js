!function(t,i,s,e){"use strict";function r(s){var e=this;this.opts=t.extend({duration:400,easing:"swing",surplus:1,interval:0},s),this.backup={},this.lock=!1,this.activeResponsive=!1,this.$window=t(i),this.$el=t(s.el),this.backup.html=this.$el.html(),this.$el.empty(),this.$parent=this.$el.parent(),this.$el.on("click",".nCarousel__prev",function(){return e.animation(e.current-1),!1}).on("click",".nCarousel__next",function(){return e.animation(e.current+1),!1}),this.maxWidth=parseInt(this.$el.css("max-width")),this.init(),this.windowResize(),this.resizeTimer=!1,this.$window.resize(function(){e.resizeTimer!==!1&&clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(t.proxy(e.windowResize,e),100)}),0<this.opts.interval&&(this.ticker=setInterval(function(){e.animation(e.current+1)},this.opts.interval))}t.fn.nCarousel=function(i){return this.each(function(s,e){i=t.extend({i:s,el:e},i),new r(i)})},r.prototype.windowResize=function(){if(this.windowWidth=this.$window.width(),this.maxWidth<this.$window.width())return void(this.activeResponsive&&(console.log("レスポンシブを解除"),this.activeResponsive=!1,this.resetItemWidth("auto")));this.activeResponsive=!0,console.log("レスポンシブを適用"),this.resetItemWidth(this.$parent.width())},r.prototype.resetItemWidth=function(t){this.$_item.width(t),this.itemWidth=this.$item.outerWidth(!0),this.itemsWidth=this.itemWidth*this.$item.length,this.$items.css({marginLeft:-1*this.opts.surplus*this.itemWidth*this.current+this.marginCorrect,width:(2*this.opts.surplus+1)*this.itemsWidth})},r.prototype.init=function(){var t=this;this.$el.addClass("nCarousel"),this.$el.html('<div class="nCarousel__viewport"><div class="nCarousel__items">'+this.backup.html+"</div></div>"),this.$viewport=this.$el.children(".nCarousel__viewport"),this.$items=this.$viewport.children(".nCarousel__items"),this.$item=this.$items.children(),this.$item.addClass("nCarousel__item"),this.itemWidth=this.$item.outerWidth(!0),this.itemsWidth=this.itemWidth*this.$item.length,this.marginCorrect=-1*parseInt(this.$item.css("margin-left")),this.$items.css({marginLeft:-1*this.opts.surplus*this.itemsWidth+this.marginCorrect,width:(2*this.opts.surplus+1)*this.itemsWidth});for(var i=0;i<2*this.opts.surplus;i++)this.$items.append(this.$item.clone());this.$_item=this.$items.children(),this.current=this.$item.length*this.opts.surplus,this.$viewport.append('<div class="nCarousel__arrow nCarousel__prev"></div><div class="nCarousel__arrow nCarousel__next"></div>'),this.$prev=this.$viewport.children(".nCarousel__prev"),this.$next=this.$viewport.children(".nCarousel__next"),this.arrowVisibilities();for(var s='<div class="nCarousel__pointers">',i=0;i<this.$item.length;i++)s+='<div class="nCarousel__pointer"></div>';s+="</div>",this.$el.append(s),this.$pointer=this.$el.find(".nCarousel__pointer"),this.$pointer.eq(0).addClass("is-active"),this.$el.on("click",".nCarousel__pointer",function(i){var s=t.$pointer.index(this),e=s+t.$item.length*t.opts.surplus;return t.animation(e),!1})},r.prototype.animation=function(t){var i=this;return this.lock?!1:0===this.opts.surplus&&(0>t||this.$item.length-1<t)?!1:(this.lock=!0,this.current=t,i.current<i.$item.length*i.opts.surplus?i.current+=i.$item.length:i.current>=i.$item.length*(i.opts.surplus+1)&&(i.current-=i.$item.length),i.pointerActive(),this.$items.stop(!0,!1).animate({marginLeft:i.itemWidth*t*-1+this.marginCorrect},this.opts.duration,this.opts.easing,function(){i.$items.css("marginLeft",i.itemWidth*i.current*-1+i.marginCorrect),i.lock=!1}),void this.arrowVisibilities())},r.prototype.arrowVisibilities=function(){0===this.opts.surplus&&(0==this.current?this.$prev.css("display","none"):this.$prev.css("display","block"),this.current==this.$item.length-1?this.$next.css("display","none"):this.$next.css("display","block"))},r.prototype.pointerActive=function(){this.$pointer.filter(".is-active").removeClass("is-active"),this.$pointer.eq(this.current-this.$item.length*this.opts.surplus).addClass("is-active")}}(jQuery,this,this.document);
//# sourceMappingURL=data:application/json;base64,
